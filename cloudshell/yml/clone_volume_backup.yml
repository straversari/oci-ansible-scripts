---
- name : Get variables from env
  connection: local
  hosts: localhost
  vars:
    instance_id: "{{ lookup('env', 'CUSTOM_INSTANCE_OCID') }}"    
    availability_domain: "{{ lookup('env', 'CUSTOM_AD_NAME') }}"
    compartment_id: "{{ lookup('env', 'CUSTOM_COMPARTMENT_OCID') }}"    
    
    clone_volume_name: "{{ lookup('env','CUSTOM_CLONE_VOLUME_NAME') }}"
    source_backup_ocid: "{{ lookup('env','CUSTOM_SOURCE_BACKUP_VOLUME_OCID') }}"
    clone_device_name: "{{ lookup('env','CUSTOM_CLONE_DEVICE_NAME') }}"
    
  tasks:      
    - name: Clone volume
      oci_volume:
        name: "{{ clone_volume_name }}"
        availability_domain: "{{ availability_domain }}"
        compartment_id: "{{ compartment_id }}"
        source_details:
          id: "{{ source_backup_ocid }}"
          type: volumeBackup        
      when:  clone_volume_name  != ""
      register: volume_result
      
    - set_fact:
        volume_id: "{{volume_result.volume.id }}"
      when:  clone_volume_name  != ""

    - name: Attach the volume to the instance
      oci_volume_attachment:
        instance_id: "{{ instance_id }}"
        type: "iscsi"
        volume_id: "{{ volume_id }}"
        device: "{{ clone_device_name }}"
      when:  clone_volume_name  != ""
      register: attachment_result

    - set_fact:
        volume_attachment_details: "{{ attachment_result.volume_attachment }}"
      when:  clone_volume_name  != ""
      
    - name: Print the iSCSI commands to attached volume
      debug:
        msg:
          - "@@@CUSTOM_VOLUME_ID = {{ volume_id }}"
          - "@@@CUSTOM_VOLUME_ATTACHMENT = {{ volume_attachment_details.iscsi_attach_commands }}"
      when:  clone_volume_name  != ""
